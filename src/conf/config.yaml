defaults:
  - _self_
  - preprocess: small_mvt_1
  - extract_droplets: ransac3
  - extract_visual_embeddings: cl_elastic_net
  - track: unb_reg_sinkhorn

verbose: true
skip_preprocessing: true
skip_droplet_extraction: false
skip_visual_embedding_extraction: false
skip_tracking: false



# OLD ARGS
#     parser = argparse.ArgumentParser(description='Generate a tracking of droplets from an image.')

#     parser.add_argument('raw_image', type=str,
#                         help=f'ND2 image file name')

#     parser.add_argument('-g', '--generate_embeddings', action='store_false',
#                         help=f'generate embeddings. '
#                              'default = True.')

#     parser.add_argument('-t', '--train_model', action='store_true',
#                         help=f'train model. '
#                              'default = False')

#     parser.add_argument('-s', '--skip_dataset', action='store_true',
#                         help=f'Skip dataset generation. '
#                              'default = False')

#     parser.add_argument('-e', '--embeddings', action='store_false',
#                         help=f'Use embeddings. '
#                              'default = True')

#     parser.add_argument('-l', '--linking', action='store_false',
#                         help=f'Make linking. '
#                              'default = True')

#     parser.add_argument('--similarity_weight', type=float, default=0.5,
#                         help='a number between 0 and 1. 1 means we only link droplets if they have exactly the same features. '
#                              '0 means we allow linking of droplets even if they look very different. '
#                              'default = 0.5')

#     parser.add_argument('--vicinity_weight', type=float, default=0.5,
#                         help='a number between 0 and 1. 1 means we prefer only spacial vicinity. '
#                              '0 means we consider spacial vicinity and visual similarity. '
#                              'default = 0.5')

#     parser.add_argument('--max_dist', type=int, default=250,
#                         help='a positive integer that indicates the maximal distance in pixels that a droplet can move between frames. '
#                              'default = 250')

#     parser.add_argument('--movement_variability', type=float, default=1.0,
#                         help='a positive floating point number (typically close to 1, seem to work best). '
#                              'Close to 0 means we prefer few droplets that move a lot. '
#                              '1 means we are neutral. Greater than 1 means we prefer if many droplets move a bit. '
#                              'default = 1')

#     parser.add_argument('--radius_min', type=int, default=12,
#                         help='Minimum radius of droplets to be detected in pixels. '
#                              'default = 1')

#     parser.add_argument('--radius_max', type=int, default=25,
#                         help='Maximum radius of droplets to be detected in pixels. '
#                              'default = 25')

#     parser.add_argument('--pixel', type=int, default=-1,
#                         help='number of pixels used per axis - just for training.')

#     parser.add_argument('--skip_preprocessing', type=bool, default=False,
#                         help='Whether to skip preprocessing. Defaults to False.')

#     args = parser.parse_args()